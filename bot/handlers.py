from telegram.ext import CommandHandler, ConversationHandler, MessageHandler, filters
from telegram import Update
from telegram.ext import ContextTypes
from bot.pdf_utils import send_pdf_to_user
from bot.database import save_user_data, create_user_if_not_exists, get_user_data
from bot.phone_utils import normalize_phone_number

ASK_NAME, ASK_BIRTHDAY, ASK_PHONE, ASK_FILE_SELECTION = range(4)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    tg_id = update.effective_user.id
    user_data = get_user_data(tg_id)  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

    if user_data:  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É —Ñ–∞–π–ª–∞
        await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç, —Ç—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!" + " \n " + " \n "
                                        "–£ –º–µ–Ω—è –µ—Å—Ç—å –¥–ª—è —Ç–µ–±—è –∞—Å—Ç—Ä–æ-–º–µ—Ç–æ–¥–∏—á–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–ª—É—á—à–∞—Ç —Ä–∞–∑–Ω—ã–µ —Å—Ñ–µ—Ä—ã –∂–∏–∑–Ω–∏: \n" + "\n"
                                        "1. ¬´–ü–†–û–Ø–í–õ–ï–ù–ù–û–°–¢–¨¬ª ‚òÄÔ∏è\n–¢—ã —É–∑–Ω–∞–µ—à—å, –∫–∞–∫ —Å—Ç–∞—Ç—å –∑–∞–º–µ—Ç–Ω–µ–µ –¥–ª—è –º–∏—Ä–∞, –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å —É–¥–∞—á—É –∏ –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω–Ω—ã–º –≤ —Å–µ–±–µ —á–µ–ª–æ–≤–µ–∫–æ–º \n" + "\n"
                                        "2. ¬´–ö–ê–ö –í–õ–Æ–ë–ò–¢–¨ –ú–£–ñ–ß–ò–ù–£¬ª üíñ\n–ò—Å–ø–æ–ª—å–∑—É—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ª–∞–π—Ñ—Ö–∞–∫–∏, —Ç—ã –∑–∞–ø–∞–¥–∞–µ—à—å –≤–æ–∑–ª—é–±–ª–µ–Ω–Ω–æ–º—É –≤ —Å–∞–º–æ–µ —Å–µ—Ä–¥–µ—á–∫–æ \n" + "\n"
                                        "–ù–∞–ø–∏—à–∏ –Ω–æ–º–µ—Ä –º–µ—Ç–æ–¥–∏—á–∫–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å üëá"
                                        )
        return ASK_FILE_SELECTION

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ, –Ω–∞—á–∏–Ω–∞–µ–º —Å–æ–±–∏—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
    create_user_if_not_exists(tg_id)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –∞—Å—Ç—Ä–æ–ª–æ–≥–∞ –ù–∞–¥–∏ –ú–∞–µ–≤—Å–∫–æ–π üíó\n"+"\n"
                                    "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")

    return ASK_NAME


async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["name"] = update.message.text
    await update.message.reply_text("–£–∫–∞–∂–∏ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì)")
    return ASK_BIRTHDAY


async def get_birthday(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["birthday"] = update.message.text
    await update.message.reply_text("–ò –Ω–∞–∫–æ–Ω–µ—Ü, —Ç–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    return ASK_PHONE


async def get_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    raw_phone = update.message.text
    phone = normalize_phone_number(raw_phone)
    if not phone:
        await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –Ω–æ–º–µ—Ä. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑:")
        return ASK_PHONE

    tg_id = update.effective_user.id
    save_user_data(
        tg_id,
        name=context.user_data["name"],
        birthday=context.user_data["birthday"],
        phone=phone,
    )
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ, –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã ‚úÖ \n ")
    await update.message.reply_text("–£ –º–µ–Ω—è –µ—Å—Ç—å –¥–ª—è —Ç–µ–±—è –∞—Å—Ç—Ä–æ-–º–µ—Ç–æ–¥–∏—á–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–ª—É—á—à–∞—Ç —Ä–∞–∑–Ω—ã–µ —Å—Ñ–µ—Ä—ã –∂–∏–∑–Ω–∏: \n" + "\n"
                                    "1. ¬´–ü–†–û–Ø–í–õ–ï–ù–ù–û–°–¢–¨¬ª ‚òÄÔ∏è\n–¢—ã —É–∑–Ω–∞–µ—à—å, –∫–∞–∫ —Å—Ç–∞—Ç—å –∑–∞–º–µ—Ç–Ω–µ–µ –¥–ª—è –º–∏—Ä–∞, –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å —É–¥–∞—á—É –∏ –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω–Ω—ã–º –≤ —Å–µ–±–µ —á–µ–ª–æ–≤–µ–∫–æ–º \n" + "\n"
                                    
                                    "2. ¬´–ö–ê–ö –í–õ–Æ–ë–ò–¢–¨ –ú–£–ñ–ß–ò–ù–£¬ª üíñ\n–ò—Å–ø–æ–ª—å–∑—É—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ª–∞–π—Ñ—Ö–∞–∫–∏, —Ç—ã –∑–∞–ø–∞–¥–∞–µ—à—å –≤–æ–∑–ª—é–±–ª–µ–Ω–Ω–æ–º—É –≤ —Å–∞–º–æ–µ —Å–µ—Ä–¥–µ—á–∫–æ \n" + "\n"
                                    "–ù–∞–ø–∏—à–∏ –Ω–æ–º–µ—Ä –º–µ—Ç–æ–¥–∏—á–∫–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å üëá")

    return ASK_FILE_SELECTION


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û–ø—Ä–æ—Å –æ—Ç–º–µ–Ω—ë–Ω.")
    return ConversationHandler.END


async def get_pdf(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –Ω–æ–º–µ—Ä (1 –∏–ª–∏ 2), –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª
    text = update.message.text
    if text == '1':
        filename = "–ü—Ä–æ—è–≤–ª–µ–Ω–Ω–æ—Å—Ç—å.pdf"
    elif text == '2':
        filename = "–ö–∞–∫ –≤–ª—é–±–∏—Ç—å –º—É–∂—á–∏–Ω—É.pdf"
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä 1 –∏–ª–∏ 2.")
        return

    await send_pdf_to_user(update, context, filename)
    return ConversationHandler.END


# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
def register_handlers(app):
    conversation_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            ASK_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
            ASK_BIRTHDAY: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_birthday)],
            ASK_PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_phone)],
            ASK_FILE_SELECTION: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_pdf)],  # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(conversation_handler)
